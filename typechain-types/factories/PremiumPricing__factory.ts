/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PremiumPricing,
  PremiumPricingInterface,
} from "../PremiumPricing";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumCoverage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_curvature",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumRiskFactor",
        type: "uint256",
      },
      {
        internalType: "contract ICoveragePool",
        name: "_coveragePoolAddress",
        type: "address",
      },
      {
        internalType: "contract IReferenceObligation",
        name: "_referenceObligationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minimumCoverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_curvature",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_minimumRiskFactor",
        type: "uint256",
      },
    ],
    name: "PremiumPricingInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "coveragePool",
    outputs: [
      {
        internalType: "contract ICoveragePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curvature",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumCoverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumRiskFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referenceObligation",
    outputs: [
      {
        internalType: "contract IReferenceObligation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_curvature",
        type: "uint256",
      },
    ],
    name: "setCurvature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumCoverage",
        type: "uint256",
      },
    ],
    name: "setMinimumCoverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumRiskFactor",
        type: "uint256",
      },
    ],
    name: "setMinimumRiskFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161068a38038061068a83398101604081905261002f9161010c565b6000610039610108565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600385905560048490556005839055600180546001600160a01b038085166001600160a01b03199283161790925560028054928416929091169190911790556040517f1d78cc5b1e3acdf39e46f66d658ee53b0488d83869548d296075b2e8cd64af85906100f690879087908790610162565b60405180910390a15050505050610190565b3390565b600080600080600060a08688031215610123578081fd5b855194506020860151935060408601519250606086015161014381610178565b608087015190925061015481610178565b809150509295509295909350565b9283526020830191909152604082015260600190565b6001600160a01b038116811461018d57600080fd5b50565b6104eb8061019f6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806383db5bb711610081578063b6e72fbf1161005b578063b6e72fbf14610149578063e15738b314610151578063f2fde38b14610164576100c9565b806383db5bb7146101265780638da5cb5b14610139578063a24c583114610141576100c9565b806354617c89116100b257806354617c89146101015780636429c9d114610109578063715018a61461011e576100c9565b80632a75d4cf146100ce5780633de7afb2146100ec575b600080fd5b6100d6610177565b6040516100e391906104ac565b60405180910390f35b6100f461017d565b6040516100e39190610406565b6100f461018c565b61011c6101173660046103ee565b61019b565b005b61011c6101de565b61011c6101343660046103ee565b61026a565b6100f46102a4565b6100d66102b3565b6100d66102b9565b61011c61015f3660046103ee565b6102bf565b61011c6101723660046103c0565b6102f9565b60045481565b6001546001600160a01b031681565b6002546001600160a01b031681565b6101a36103bc565b6000546001600160a01b039081169116146101d95760405162461bcd60e51b81526004016101d090610477565b60405180910390fd5b600555565b6101e66103bc565b6000546001600160a01b039081169116146102135760405162461bcd60e51b81526004016101d090610477565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6102726103bc565b6000546001600160a01b0390811691161461029f5760405162461bcd60e51b81526004016101d090610477565b600455565b6000546001600160a01b031690565b60055481565b60035481565b6102c76103bc565b6000546001600160a01b039081169116146102f45760405162461bcd60e51b81526004016101d090610477565b600355565b6103016103bc565b6000546001600160a01b0390811691161461032e5760405162461bcd60e51b81526004016101d090610477565b6001600160a01b0381166103545760405162461bcd60e51b81526004016101d09061041a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b6000602082840312156103d1578081fd5b81356001600160a01b03811681146103e7578182fd5b9392505050565b6000602082840312156103ff578081fd5b5035919050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b9081526020019056fea2646970667358221220403ca8df77b51f73f278ef36d1b5c79d1ed0db8eb0c3c859c1ed4e111cf0968764736f6c63430008000033";

type PremiumPricingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumPricingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumPricing__factory extends ContractFactory {
  constructor(...args: PremiumPricingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PremiumPricing";
  }

  deploy(
    _minimumCoverage: BigNumberish,
    _curvature: BigNumberish,
    _minimumRiskFactor: BigNumberish,
    _coveragePoolAddress: string,
    _referenceObligationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PremiumPricing> {
    return super.deploy(
      _minimumCoverage,
      _curvature,
      _minimumRiskFactor,
      _coveragePoolAddress,
      _referenceObligationAddress,
      overrides || {}
    ) as Promise<PremiumPricing>;
  }
  getDeployTransaction(
    _minimumCoverage: BigNumberish,
    _curvature: BigNumberish,
    _minimumRiskFactor: BigNumberish,
    _coveragePoolAddress: string,
    _referenceObligationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _minimumCoverage,
      _curvature,
      _minimumRiskFactor,
      _coveragePoolAddress,
      _referenceObligationAddress,
      overrides || {}
    );
  }
  attach(address: string): PremiumPricing {
    return super.attach(address) as PremiumPricing;
  }
  connect(signer: Signer): PremiumPricing__factory {
    return super.connect(signer) as PremiumPricing__factory;
  }
  static readonly contractName: "PremiumPricing";
  public readonly contractName: "PremiumPricing";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumPricingInterface {
    return new utils.Interface(_abi) as PremiumPricingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PremiumPricing {
    return new Contract(address, _abi, signerOrProvider) as PremiumPricing;
  }
}
