/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IReferenceObligation,
  IReferenceObligationInterface,
} from "../IReferenceObligation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_loanId",
        type: "uint8",
      },
    ],
    name: "checkIsDefaulted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkIsExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_loanId",
        type: "uint8",
      },
    ],
    name: "getMaxLoss",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "loanIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanIdToLoan",
    outputs: [
      {
        internalType: "string",
        name: "Protocol",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "ExpirationTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "PrincipalAmountInUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "InterestAmountInUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "CollateralAmountInUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "RepaidAmountInUSD",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "IsDefaulted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanIdToLoanAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referenceObligation",
    outputs: [
      {
        internalType: "string",
        name: "Name",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "ExpirationTimestamp",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "IsExpired",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_loanId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_isDefaulted",
        type: "bool",
      },
    ],
    name: "setIsDefaulted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isExpired",
        type: "bool",
      },
    ],
    name: "setIsExpired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IReferenceObligation__factory {
  static readonly abi = _abi;
  static createInterface(): IReferenceObligationInterface {
    return new utils.Interface(_abi) as IReferenceObligationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IReferenceObligation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IReferenceObligation;
  }
}
